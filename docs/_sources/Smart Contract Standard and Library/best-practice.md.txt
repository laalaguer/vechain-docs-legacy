---
title: "Smart contract development best practice"
slug: "best-practice"
hidden: false
createdAt: "2019-02-22T06:40:19.675Z"
updatedAt: "2019-04-04T07:48:03.355Z"
---
# VeChainThor Solidity The Right Way


## Motivation

As you may know, EVM is also the runtime environment for smart contracts in VeChainThor. So this guide is built upon and inspired by a number of articles and talks by the Ethereum community. These practices are certainly not unique to programming and development in VeChainThor.

Our goal here is to make you a better—more effective, more knowledgeable, more practical—solidity developer in VeChainThor.

## Contents

+ [Recommendations](doc:recommendations) 
+ [Design Patterns](doc:design-patterns) 
+ [Security](doc:security) 
+ [Resources](doc:resources) 


## General Philosophy

+ **Keep Simple**: Complexity increases the likelihood of errors.
+ **Security First**: The security of a smart contract is always a top priority.
+ **Revert As Far As Possible**: Do not use `return false` when a condition is not met.